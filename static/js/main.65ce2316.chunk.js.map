{"version":3,"sources":["components/tickets/AddTicket.js","components/tickets/ListTickets.js","App.js","serviceWorker.js","index.js"],"names":["AddTicket","state","id","project","status","subject","description","requester","assignedTo","priority","dateCreated","dateDue","attachments","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","addTicket","className","onSubmit","this","htmlFor","onChange","selected","vlaue","type","rows","Component","ListTickets","tickets","deleteTicket","listTickets","length","map","ticket","key","scope","onClick","Fragment","href","App","i","findIndex","splice","Math","random","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.65ce2316.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Tickets.css'\r\n\r\nexport default class AddTicket extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        project: '',\r\n        status: '',\r\n        subject: '',\r\n        description: '',\r\n        requester: '',\r\n        assignedTo: '',\r\n        priority: '',\r\n        dateCreated: '',\r\n        dateDue: '',\r\n        attachments: ''\r\n       \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addTicket(this.state)\r\n        this.setState({\r\n            id: '',\r\n            project: '',\r\n            status: '',\r\n            subject: '',\r\n            description: '',\r\n            requester: '',\r\n            assignedTo: '',\r\n            priority: '',\r\n            dateCreated: '',\r\n            dateDue: '',\r\n            attachments: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card my-3\">\r\n                <div className=\"card-header\"><h4>New ticket</h4></div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            {/* ----------------- Project champ ------------------- */}\r\n                            <label htmlFor=\"projet\">Project</label>\r\n                            <select className=\"custom-select mb-3\" name=\"project\" onChange={this.handleChange} value={this.state.project}>\r\n                                <option selected>Choose Project...</option>\r\n                                <option value=\"P0112\">P0112</option>\r\n                                <option value=\"P0015\">P0015</option>\r\n                                <option value=\"P5510\">P5510</option>\r\n                            </select>\r\n                            {/* ----------------- Status champ ------------------- */}\r\n                            <label htmlFor=\"status\">Status</label>\r\n                            <select className=\"custom-select mb-3\"  name=\"status\" onChange={this.handleChange} value={this.state.status}>\r\n                                <option selected value=\"Open\">Open</option>\r\n                                <option value=\"In Progress\">In Progress</option>\r\n                                <option value=\"On Hold\">On Hold</option>\r\n                                <option value=\"Solved\">Solved</option>\r\n                                <option vlaue=\"Closed\">Closed</option>\r\n                            </select>\r\n                            {/* ----------------- Subject champ ------------------- */}\r\n                            <label htmlFor=\"subject\">Subject</label>\r\n                            <input type=\"text\" className=\"form-control mb-3\" name=\"subject\" onChange={this.handleChange} value={this.state.subject}/>\r\n                            {/* ----------------- Description champ ------------------- */}\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"description\">Description</label>\r\n                                <textarea className=\"form-control\" rows=\"4\" name=\"description\" onChange={this.handleChange} value={this.state.description}>\r\n                                </textarea>\r\n                            </div>\r\n                            {/* ----------------- Assigned to champ ------------------- */}\r\n                            <label htmlFor=\"assignedTo\">Assigned To</label>\r\n                            <select className=\"custom-select mb-3\" name=\"assignedTo\" onChange={this.handleChange} value={this.state.assignedTo}>\r\n                                <option selected value=\"Rami Issaoui\">Rami Issaoui</option>\r\n                                <option value=\"Samih daboussi\">Samih daboussi</option>\r\n                                <option value=\"Yahya ayari\">Yahya ayari</option>\r\n                                <option vlaue=\"Marwa youssfi\">Marwa youssfi</option>\r\n                            </select>\r\n                            {/* ----------------- Priority champ ------------------- */}\r\n                            <label htmlFor=\"priority\">Priority</label>\r\n                            <select className=\"custom-select mb-3\" name=\"priority\" onChange={this.handleChange} value={this.state.priority}>\r\n                                <option selected value=\"Low\">Low</option>\r\n                                <option value=\"Urgent\">Urgent</option>\r\n                                <option value=\"Medium\">Medium</option>\r\n                            </select>\r\n                            {/* ----------------- Start date champ ------------------- */}\r\n                            <label htmlFor=\"startdate\">Start Date</label>\r\n                            <input type=\"date\" className=\"form-control mb-3\" name=\"startdate\" onChange={this.handleChange} value={this.state.dateCreated}/>\r\n                            {/* ----------------- Start date champ ------------------- */}\r\n                            <label htmlFor=\"enddate\">End Date</label>\r\n                            <input type=\"date\" className=\"form-control mb-3\" name=\"enddate\" onChange={this.handleChange} value={this.state.dateDue}/>\r\n                            {/* ----------------- file champ ------------------- */}\r\n                            <div className=\"custom-file\">\r\n                                <input type=\"file\" className=\"custom-file-input\" name=\"file\" onChange={this.handleChange} value={this.state.attachments}/>\r\n                                <label className=\"custom-file-label\" htmlFor=\"customFile\">Choose file</label>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn btn-dark btn-block\">\r\n                            Add new Ticket !\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst ListTickets = (props) => {\r\n\r\n    const { tickets, deleteTicket } = props\r\n    const length = tickets.length\r\n    const listTickets = length ? (\r\n        tickets.map(ticket => {\r\n            return (\r\n                <div className=\"card mt-5 listTickets\" key={ticket.id}>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-3\">\r\n                                <p className=\"ticketId\">TicketID : {ticket.id}</p>\r\n\r\n                                {(ticket.status === 'Open') ? <p className=\"status open\">{ticket.status}</p> :\r\n                                    (ticket.status === 'In Progress') ? <p className=\"status inProgress\">{ticket.status}</p> :\r\n                                    (ticket.status === 'On Hold') ? <p className=\"status onHold\">{ticket.status}</p> :\r\n                                    (ticket.status === 'Solved') ? <p className=\"status solved\">{ticket.status}</p> :\r\n                                    (ticket.status === 'Closed') ? <p className=\"status closed\">{ticket.status}</p> :\r\n                                    <p className=\"status\">{ticket.status}</p>\r\n                                }\r\n                            </div>\r\n                            <div className=\"col-md-9\">\r\n                                <p className=\"subject\">{ticket.subject}</p>\r\n                                <p><span className=\"dateTicket\"> {ticket.dateCreated}</span> - <span className=\"dateTicket\"> {ticket.dateDue}</span></p>\r\n                                <p className=\"description\">{ticket.description}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"table-responsive\">\r\n                            <table className=\"table table-striped mt-2 my-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Project</th>\r\n                                        <th scope=\"col\">Requester</th>\r\n                                        <th scope=\"col\">Assigned to</th>\r\n                                        <th scope=\"col\">Priority</th>\r\n                                        <th scope=\"col\">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n\r\n\r\n                                    <tr >\r\n                                        <td>{ticket.project}</td>\r\n                                        <td>{ticket.requester}</td>\r\n                                        <td>{ticket.assignedTo}</td>\r\n                                        \r\n\r\n                                        {(ticket.priority === 'Urgent') ? <td className=\"urgent\">{ticket.priority}</td> : (ticket.priority === 'Medium') ? <td className=\"medium\">{ticket.priority}</td> : <td className=\"low\">{ticket.priority}</td>}\r\n                                       \r\n\r\n                                        <td className=\"actions-fa\">\r\n                                            <i className=\"fas fa-trash-alt\" onClick={() => deleteTicket(ticket.id)}></i>\r\n                                            <i className=\"fas fa-pencil-alt\"></i>\r\n                                            <i className=\"far fa-eye\"></i>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    ) : (\r\n        <div className=\"card mt-5 p-3 text-center\">\r\n            <div className=\"card-boy\">\r\n                <h3>List is empty</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>My support tickets</h2>\r\n            <hr />\r\n            <a href=\"/addticket\" className=\"btn btn-danger mt-3\"><i className=\"fas fa-plus\"></i> Add ticket</a>\r\n           {listTickets} \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default ListTickets;","import React, { Component } from 'react'\nimport AddTicket from './components/tickets/AddTicket'\nimport ListTickets from './components/tickets/ListTickets'\n\nclass App extends Component {\n\n  state = {\n    tickets: [\n      {\n        id: 1,\n        project: 'Project23',\n        status: 'Open',\n        subject: 'Application React js',\n        description: 'Le lorem ipsum est, en imprimerie, une suite de mots sans signification utilisée à titre provisoire pour calibrer une mise en page, le texte définitif venant remplacer le faux-texte dès il est prêt ou que la mise en page est achevée.',\n        requester: 'Dalila meftah',\n        assignedTo: 'Samih derbeli',\n        priority: 'Urgent',\n        dateCreated: '20/05/2020',\n        dateDue: '27/05/2020',\n        attachments: 'pdf'\n      }\n      \n    ]\n  }\n\n  deleteTicket = (id) => {\n    let tickets = this.state.tickets;\n    let i = tickets.findIndex(ticket => ticket.id === id)\n    tickets.splice(i, 1)\n    this.setState({tickets})\n  }\n\n  addTicket = (ticket) => {\n    ticket.id = Math.random();\n    let tickets = this.state.tickets;\n    tickets.push(ticket);\n    this.setState({ tickets });\n  \n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        \n        <ListTickets tickets={this.state.tickets} deleteTicket={this.deleteTicket}/>\n        <AddTicket addTicket={this.addTicket} />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}